name: build

on:
  pull_request:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
    - '.gitignore'
  repository_dispatch:
    types: [ build ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      linux: ${{ steps.get_matrix.outputs.linux }}
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check flake
        run: nix flake check --all-systems
      - name: Calculate strategy matrix
        id: get_matrix
        run: |
          linux=$(nix eval .\#nixosConfigurations --raw \
            --apply "x: builtins.toJSON (map (y: { name = y; system = x.\${y}.pkgs.system; }) (builtins.attrNames x))")
          echo "linux=$linux" >> $GITHUB_OUTPUT

  build-linux:
    needs: validate
    strategy:
      matrix: 
        host: ${{ fromJson(needs.validate.outputs.linux) }}
      fail-fast: false
    runs-on: ${{ matrix.host.system == 'aarch64-linux' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    steps:
      - name: Checkout new change
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Free disk space
        continue-on-error: true
        run: |
          curl -fsSL https://raw.githubusercontent.com/apache/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash
          sudo docker image prune --all --force || true
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: 'nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz'
          extra_nix_config: |
            accept-flake-config = true
            system-features = kvm big-parallel
            experimental-features = nix-command flakes
            builders-use-substitutes = true
            max-jobs = auto
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Build Azure Image
        run: |
          nix build .#nixosConfigurations.${{ matrix.host.name }}.config.system.build.azureImage
      - name: Build System Profile
        run: |
          nix build .#nixosConfigurations.${{ matrix.host.name }}.config.system.build.toplevel
